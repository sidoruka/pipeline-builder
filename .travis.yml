language: node_js
node_js: "6"
os: linux
services:
  - docker
#before_install: 
#    - |-
#          CURRENT_VERSION="$(npm version | grep -Po "(?<='$PACKAGE_NAME': ')[^']*")"
#          if [[ $TRAVIS_BRANCH == "master" ]]; then
#              LAST_PUBLISHED="$(npm view $PACKAGE_NAME@latest version)"
#
#              if [[ $LAST_PUBLISHED == $CURRENT_VERSION ]]; then
#                  echo "Version change required"
#                  exit 1; 
#              fi
#          fi
#install: 
#    - yarn global add gulp-cli
#    - yarn install
script:     
    - wget https://saucelabs.com/downloads/sc-4.4.7-linux.tar.gz -O - | tar -xz && ./sc-4.4.7-linux/bin/sc --user=$SAUCE_USERNAME --api-key=$SAUCE_ACCESS_KEY --doctor
    - curl -u $SAUCE_USERNAME:$SAUCE_ACCESS_KEY https://saucelabs.com/rest/v1/$SAUCE_USERNAME/tunnels
#gulp
#after_script: 
#    - gulp test:coveralls
#    - gulp deploy
#    - wget https://saucelabs.com/downloads/sc-4.4.7-linux.tar.gz -O - | tar -xz && cd ./sc-4.4.7-linux/bin
#    - ./sc --user=$SAUCE_USERNAME --api-key=$SAUCE_ACCESS_KEY
#    - docker build -t pipelinebuilder-test . 
#    - docker run -p 8081:80 -d pipelinebuilder-test
#    - gulp integrations_test
#before_deploy:
#    - |-
#          if [[ $TRAVIS_BRANCH == "dev" ]]; then
#              VERSION_TO_PUBLISH=$CURRENT_VERSION.$TRAVIS_BUILD_NUMBER
#              echo "$VERSION_TO_PUBLISH"
#              npm --no-git-tag-version version $VERSION_TO_PUBLISH
#          fi
#deploy:
#    - provider: npm
#      skip_cleanup: true
#      email: $EMAIL
#      api_key: $NPM_AUTH_TOKEN
#      tag: dev
#      on:
#          branch: dev
#    - provider: npm
#      skip_cleanup: true
#      email: $EMAIL
#      api_key: $NPM_AUTH_TOKEN
#      tag: latest
#      on:
#          branch: master
#after_deploy:
#    - "curl \"http://$JENKINS_SRV/job/pipeline-wdl-builder-$TRAVIS_BRANCH/build?token=$JENKINS_SECRET_TOKEN\""
#after_script: gulp gulp integrations_test